<commands>


<setup>
echo "Checking for Python 3..."
if which python3 >/dev/null 2>&1
then
    PYTHON_CMD=python3
else
    echo "Python 3 not found. Please install Python 3 and try again."
    exit 1
fi

echo "Creating virtual environment..."
if [ ! -d .venv ]
then
    $PYTHON_CMD -m venv .venv
fi

if [ ! -f .venv/bin/activate ]
then
    echo "Failed to create virtual environment. Please install python3-venv package and try again."
    exit 1
fi

echo "Activating virtual environment..."
. .venv/bin/activate

echo "Installing dependencies..."
pip install -e .
pip install -r dev-requirements.txt
</setup>

<precommit>
echo "Running ruff..."
ruff check --fix .
echo "Running black..."
black --preview .
echo "Running isort..."
isort .
echo "Running pyright..."
pyright
echo "Running pytest..."
pytest
</precommit><tools>pip install $NEW_DEPENDENCY
        <comment>After installing a new dependency, update requirements.txt or dev-requirements.txt as appropriate</comment>
        
        python setup.py sdist bdist_wheel
        <comment>Build distribution packages</comment>
        
        twine upload dist/*
        <comment>Upload packages to PyPI (requires twine to be installed and configured)</comment>
        
        python tests/license_check.py
        <comment>Run license checking script</comment>
        
        cd benchmarks && ./exercism_practice.py --max_iterations $MAX_ITERATIONS --max_workers $MAX_WORKERS --max_benchmarks $MAX_BENCHMARKS --language $LANGUAGE
        <comment>Run benchmarks for a specific language (e.g., javascript or python)</comment>
        
        cd benchmarks && ./benchmark_runner.py --retries $RETRIES
        <comment>Run real-world benchmarks</comment></tools>
</commands>